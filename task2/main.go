package main

import "fmt"

func main() {
	arr := []uint8{2, 4, 6, 8, 10}

	// небуферизованный канал, для передачи значений массива
	numbers := make(chan uint8)
	// буферизованный канал для передачи сообщения о завершении задачи
	done := make(chan struct{}, len(arr))

	// горутина блокируется, пока не будет прочитано значение из канала numbers
	go func() {
		for _, num := range arr {
			numbers <- num
		}
		close(numbers)
	}()

	// горутина блокируется, пока не получает значение из канала numbers
	go func() {
		for num := range numbers {
			fmt.Println(num * num)
			// после вывода в консоль квадрата num, отправляет в канал done сообщение
			// об обработке задания
			done <- struct{}{}
		}
	}()

	// цикл нужен для того, чтобы главная го программа не завершилась, пока
	// необходимое количество раз не получит сообщение из канала done
	for i := 0; i < len(arr); i++ {
		<-done
	}
}
